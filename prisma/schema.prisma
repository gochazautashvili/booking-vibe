generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Hotel {
  id     String @id @default(uuid())
  userId String

  title               String
  description         String
  image               String
  country             String
  state               String
  city                String
  locationDescription String

  gym          Boolean @default(false)
  spa          Boolean @default(false)
  bar          Boolean @default(false)
  laundry      Boolean @default(false)
  restaurant   Boolean @default(false)
  shopping     Boolean @default(false)
  freeParking  Boolean @default(false)
  bikeRental   Boolean @default(false)
  freeWifi     Boolean @default(false)
  movieNights  Boolean @default(false)
  swimmingPool Boolean @default(false)
  coffeeShop   Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rooms    Room[]
  bookings Booking[]
}

model Room {
  id String @id @default(uuid())

  title          String
  description    String
  bedCount       Int     @default(0)
  guestCount     Int     @default(0)
  bathroomCount  Int     @default(0)
  kingBed        Int     @default(0)
  quennBed       Int     @default(0)
  image          String
  breakFastPrice Int
  roomPrice      Int
  roomeService   Boolean @default(false)
  TV             Boolean @default(false)
  balcony        Boolean @default(false)
  freeWifi       Boolean @default(false)
  cityView       Boolean @default(false)
  oceanView      Boolean @default(false)
  forestView     Boolean @default(false)
  mountineView   Boolean @default(false)
  airCondition   Boolean @default(false)
  soundProofed   Boolean @default(false)

  Hotel   Hotel? @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId String

  booking Booking[]

  @@index([hotelId])
}

model Booking {
  id String @id @default(uuid())

  userEmail    String
  userName     String
  userId       String
  hotelOwnerId String

  startDate DateTime
  endDate   DateTime

  breakFastIncluded Boolean
  currency          String
  totalPrice        Int
  paymentStatus     Boolean  @default(false)
  paymentIntentId   String   @unique
  bookedAt          DateTime @default(now())

  Hotel   Hotel? @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId String
  Room    Room?  @relation(fields: [roomId], references: [id])
  roomId  String

  @@index([hotelId, roomId])
}
